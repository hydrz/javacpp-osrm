// Targeted by JavaCPP version 1.5.2: DO NOT EDIT THIS FILE

package cn.hydrz.javacpp.osrm;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static cn.hydrz.javacpp.osrm.global.osrm.*;


/**
 * Represents a Open Source Routing Machine with access to its services.
 *
 * This represents an Open Source Routing Machine (OSRM) instance, with the services:
 *
 *  - Route: shortest path queries for coordinates
 *  - Table: distance tables for coordinates
 *  - Nearest: nearest street segment for coordinate
 *  - Trip: shortest round trip between coordinates
 *  - Match: snaps noisy coordinate traces to the road network
 *  - Tile: vector tiles with internal graph representation
 *
 *  All services take service-specific parameters, fill a JSON object, and return a status code.
 */
@Namespace("osrm") @NoOffset @Properties(inherit = cn.hydrz.javacpp.osrm.presets.osrm.class)
public class OSRM extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OSRM(Pointer p) { super(p); }

    /**
     * Constructs an OSRM instance with user-configurable settings.
     *
     * @param config The user-provided OSRM configuration.
     * @see EngineConfig
     */
    public OSRM(@ByRef EngineConfig config) { super((Pointer)null); allocate(config); }
    private native void allocate(@ByRef EngineConfig config);

    // Moveable but not copyable

    /**
     * Shortest path queries for coordinates.
     *
     * @param parameters route query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, RouteParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Route(@Const @ByRef RouteParameters parameters, @ByRef Object result);

    /**
     * Distance tables for coordinates.
     *
     * @param parameters table query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, TableParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Table(@Const @ByRef TableParameters parameters, @ByRef Object result);

    /**
     * Nearest street segment for coordinate.
     *
     * @param parameters nearest query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, NearestParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Nearest(@Const @ByRef NearestParameters parameters, @ByRef Object result);

    /**
     * Trip: shortest round trip between coordinates.
     *
     * @param parameters trip query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, TripParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Trip(@Const @ByRef TripParameters parameters, @ByRef Object result);

    /**
     * Match: snaps noisy coordinate traces to the road network
     *
     * @param parameters match query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, MatchParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Match(@Const @ByRef MatchParameters parameters, @ByRef Object result);

    /**
     * Tile: vector tiles with internal graph representation
     *
     * @param parameters tile query specific parameters
     * @return Status indicating success for the query or failure
     * @see Status, TileParameters and json::Object
     */
    public native @Cast("osrm::engine::Status") int Tile(@Const @ByRef TileParameters parameters, @StdString @ByRef BytePointer result);
}
